#+title: Emacs configuration
#+author: Félix Jamet
#+startup: overview

* Core setup
** =use-package=

#+begin_src emacs-lisp
(eval-when-compile
  (require 'use-package))
(setq use-package-always-ensure t  ; Automatically install packages if missing
      use-package-always-defer nil ; Set to t for aggressive lazy-loading (can be overridden per package)
      use-package-verbose t)       ; Show more info during package loading
(use-package diminish) ; Enables the :diminish option to not show minor modes in the status bar.
#+end_src

** Basic UI customizations

#+begin_src emacs-lisp
;; No annoying startup screen.
(setq inhibit-startup-screen t)

;; No tool bar, menu bar, or scroll bars.
(tool-bar-mode -1)
(menu-bar-mode -1)
(scroll-bar-mode -1)

;; Better scrolling.
(setq scroll-step 1                ; Scroll 1 line at a time.
      scroll-conservatively 10000) ; Keep cursor on screen.

;; Show line numbers.
(global-display-line-numbers-mode t)

;; Wrapping.
(global-visual-line-mode t)

;; Highlight matching parentheses.
(show-paren-mode t)

;; UTF-8 by default.
(set-charset-priority 'unicode)
(set-terminal-coding-system 'utf-8)
(set-keyboard-coding-system 'utf-8)
(set-selection-coding-system 'utf-8)
(prefer-coding-system 'utf-8)

;; More succint Yes/No prompts.
(fset 'yes-or-no-p 'y-or-n-p)

;; Preffered fonts.
(cond
 ((member "Fira Code" (font-family-list))
  (set-face-attribute 'default nil :font "Fira Code" :height 120))
 ((member "JetBrains Mono" (font-family-list))
  (set-face-attribute 'default nil :font "JetBrains Mono" :height 120))
 ((member "Source Code Pro" (font-family-list))
  (set-face-attribute 'default nil :font "Source Code Pro" :height 120))
 (t (message "Preferred fonts not found, using system default.")))
#+end_src

** Theme

=modus-vivendi= for dark, =modus-operandi= for light.

#+begin_src emacs-lisp
(use-package modus-themes
  :ensure t
  :init
  ;; (setq modus-themes-italic-constructs t
  ;;       modus-themes-bold-constructs nil
  ;;       modus-themes-subtle-line-numbers t)
  :config
  (load-theme 'modus-operandi t))
#+end_src

Doom theme is another option:
#+begin_src emacs-lisp
;; (use-package doom-themes
;;   :ensure t
;;   :config (load-theme 'doom-one t))
#+end_src


* Essential packages
** Undo-Tree

Visual undo/redo history and more standard undo/redo bindings.

#+begin_src emacs-lisp
(use-package undo-tree
  :ensure t
  :diminish undo-tree-mode
  :config
  (global-undo-tree-mode 1)
  (global-set-key (kbd "C-z") 'undo)
  (global-set-key (kbd "C-S-z") 'undo-tree-redo))
#+end_src

** Magit

#+begin_src emacs-lisp
(use-package magit
  :ensure t
  :defer t ; Will load when a magit command is called.
  :bind (("C-x g" . magit-status)
         ("C-x M-g" . magit-dispatch)
         ("C-c M-g" . magit-file-dispatch)))
#+end_src


* Conclusion

#+begin_src emacs-lisp
(message "Utúlie'n aurë!")
#+end_src
